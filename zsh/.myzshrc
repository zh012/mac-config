# clear the console buffer
function clear-scrollback-buffer {
  # Behavior of clear:
  # 1. clear scrollback if E3 cap is supported (terminal, platform specific)
  # 2. then clear visible screen
  # For some terminal 'e[3J' need to be sent explicitly to clear scrollback
  clear && printf '\e[3J'
  # .reset-prompt: bypass the zsh-syntax-highlighting wrapper
  # https://github.com/sorin-ionescu/prezto/issues/1026
  # https://github.com/zsh-users/zsh-autosuggestions/issues/107#issuecomment-183824034
  # -R: redisplay the prompt to avoid old prompts being eaten up
  # https://github.com/Powerlevel9k/powerlevel9k/pull/1176#discussion_r299303453
  zle && zle .reset-prompt && zle -R
}

zle -N clear-scrollback-buffer
bindkey '^L' clear-scrollback-buffer


# kubectl shortcuts
alias k='kubectl'
alias kg='kubectl get'
alias kc='kubectl create'
alias ka='kubectl apply'
alias kd='kubectl describe'
alias ke='kubectl exec'
alias kl='kubectl logs'

function kns() {
	ns=$1
	if [ -z $ns ]; then
		kubectl get namespace
	else
		kubectl config set-context $(kubectl config current-context) --namespace=$ns
		kubectl config get-contexts
	fi
}

function ktx () {
	context=$1
	if [ ! -z $context ]; then
		realm=$(ls -l ~/.kube/config | sed -e 's/.* -> \.\/config.//')
		kubectl config use-context "${context}.${realm}"
	fi
	kubectl config get-contexts
}

function kenv() {
    if [[ -f ~/.kube/config.$1 ]]; then
        cd ~/.kube
        rm config || true
        ln -nsf ./config.$1 config
        cd -
    else
        echo "kubectl context $1 does not exist"
    fi
}


# switch ssh config file
function sshenv() {
    if [[ -f ~/.ssh/config.$1 ]]; then
        cd ~/.ssh
        ln -nsf ./config.$1 config
        cd -
    else
        echo "config $1 does not exist"
    fi
}


# switch aws credentials
function awsenv() {
    if [[ -f ~/.aws/credentials.$1 ]]; then
        cd ~/.aws
        rm credentials || true
        ln -nsf ./credentials.$1 credentials
        cd -
        ~/.aws/awsenv-auth.py
    else
        echo "env $1 does not exist"
    fi
}